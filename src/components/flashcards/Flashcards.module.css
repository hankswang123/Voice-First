.root {
  display: flex;
  flex-direction: column;
  align-items: center;          /* horizontal center (for column layout) */
  justify-content: center;      /* vertical center */
  width: 100%;
  height: 100%;                 /* fill parent so vertical centering works */
  margin: 0 auto;
}

.flashcard {
  width: 520px;
  height: 350px;
  position: relative;
  perspective: 1000px;
  margin-bottom: 50px;
  cursor: pointer;
  margin-left: auto;             /* ensure centered if parent adds extra space */
  margin-right: auto;  

  position: relative;
}

.voiceButton {
  position: absolute;
  bottom: 4px;
  right: 43px;
  width: 42px;
  height: 42px;
  border: none;
  border-radius: 50%;
  background: rgba(0,0,0,0.55);
  color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  backdrop-filter: blur(2px);
  transition: background .2s, transform .15s;
}

.voiceButton:hover {
  background: rgba(0,0,0,0.75);
}

.voiceButton:active {
  transform: scale(.9);
}

.voiceButton.speaking {
  background: #1d4ed8;
}

.voiceButton.speaking:hover {
  background: #1e40af;
}
.translateButton {
  position: absolute;
  bottom: 4px;
  right: 0px;
  width: 42px;
  height: 42px;
  border: none;
  border-radius: 50%;
  background: rgba(0,0,0,0.55);
  color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  backdrop-filter: blur(2px);
  transition: background .2s, transform .15s;
}
.translateButton:hover:not(:disabled) {
  background: rgba(0,0,0,0.75);
}
.translateButton:active:not(:disabled) {
  transform: scale(.9);
}
.translateButton:disabled {
  opacity:.45;
  cursor: not-allowed;
}

/* Active (showing translation) state same as speaking */
.translateButton.speaking {
  background: #1d4ed8;
}
.translateButton.speaking:hover {
  background: #1e40af;
}

.translationBadge {
  position: absolute;
  left: 20px;
  bottom: 3px;
  background: rgba(0,0,0,0.78);
  color:#fff;
  padding:6px 10px;
  border-radius:6px;
  font-size:1.3rem;
  max-width:72%;
  line-height:1.25;
  pointer-events:none;
  backdrop-filter: blur(4px);
  animation: fadeIn .16s ease;
  white-space: pre-wrap;
}
@keyframes fadeIn {
  from { opacity:0; transform: translateY(4px); }
  to { opacity:1; transform: translateY(0); }
}

.face {
  width: 100%;
  height: 100%;
  position: absolute;
  border-radius: 12px;
  display: flex;
  justify-content: flex-start;
  align-items: center;
  padding: 20px;
  font-size: 2rem;
  text-align: left;
  transition: transform 0.6s;
  backface-visibility: hidden;
  overflow-y: auto;          /* enables scroll if text long */
  /* optional smooth scrolling */
  scrollbar-width: thin;  
}

.front {
  composes: face;
  background: #333;
  color: #fff;
}

.back {
  composes: face;
  background: #fff;
  color: #000;
  transform: rotateY(180deg);
  border: 1px solid #ccc;
}

.flipped .front {
  transform: rotateY(180deg);
}

.flipped .back {
  transform: rotateY(0deg);
}

.controls {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 220px;
  margin-top: 10px;
}

.navButton {
  background: none;
  border: 2px solid #007bff;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  cursor: pointer;
  font-size: 1.2rem;
  color: #007bff;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: background 0.2s, color 0.2s;
}

.navButton:hover {
  background: #007bff;
  color: #fff;
}

.counter {
  font-size: 1rem;
}